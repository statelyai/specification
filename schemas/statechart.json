{
  "$id": "https://stately.ai/schemas/0.1/statechart.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Stately Statechart Specification",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Statechart unique identifier",
      "minLength": 1
    },
    "description": {
      "type": "string",
      "description": "Statechart description"
    },
    "version": {
      "type": "string",
      "description": "Statechart version",
      "minLength": 1
    },
    "schemas": {
      "input": {
        "type": "object",
        "description": "The JSON Schema object used to validate the Statechart",
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "context": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "The JSON Schema object used to validate the Statechart",
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "events": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "The JSON Schema object used to validate the Statechart",
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "actions": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "The JSON Schema object used to validate the Statechart",
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "guards": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "The JSON Schema object used to validate the Statechart",
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "actors": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "The JSON Schema object used to validate the Statechart",
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "delays": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "The JSON Schema object used to validate the Statechart",
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "tags": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "The JSON Schema object used to validate the statechart",
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "context": {
      "type": "object",
      "description": "The initial context object",
      "additionalProperties": true
    },
    "initial": {
      "$ref": "#/definitions/initialObject"
    },
    "entry": {
      "$ref": "#/definitions/actionsDef"
    },
    "exit": {
      "$ref": "#/definitions/actionsDef"
    },
    "invoke": {
      "$ref": "#/definitions/invokeDef"
    },
    "on": {
      "$ref": "#/definitions/transitionsDef"
    },
    "states": {
      "$ref": "#/definitions/statesObject"
    },
    "meta": {
      "$ref": "#/definitions/metaObject"
    }
  },
  "required": ["id", "initial", "states"],
  "additionalProperties": false,
  "definitions": {
    "actionObject": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "definition": "The action type",
          "minLength": 1
        },
        "params": {
          "type": "object",
          "definition": "Action parameters",
          "additionalProperties": true
        }
      },
      "additionalProperties": false,
      "required": ["type"]
    },
    "actionsDef": {
      "oneOf": [
        { "$ref": "#/definitions/actionObject" },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/actionObject"
          }
        }
      ]
    },
    "baseStateNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The state node ID"
        },
        "type": {
          "type": "string",
          "enum": ["parallel", "final", "history"],
          "description": "The state type, if not a normal (atomic or compound) state node."
        },
        "description": {
          "type": "string",
          "description": "The text description of this state node."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": []
    },
    "compoundStateNode": {
      "allOf": [
        { "$ref": "#/definitions/baseStateNode" },
        {
          "type": "object",
          "properties": {
            "type": {
              "not": {}
            },
            "entry": {
              "$ref": "#/definitions/actionsDef"
            },
            "exit": {
              "$ref": "#/definitions/actionsDef"
            },
            "initial": {
              "$ref": "#/definitions/initialObject"
            },
            "invoke": {
              "$ref": "#/definitions/invokeDef"
            },
            "on": {
              "$ref": "#/definitions/transitionsDef"
            },
            "states": {
              "$ref": "#/definitions/statesObject"
            },
            "onDone": {
              "$ref": "#/definitions/transitionDef"
            }
          },
          "required": ["initial", "states"]
        }
      ]
    },
    "parallelStateNode": {
      "allOf": [
        { "$ref": "#/definitions/baseStateNode" },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "parallel"
            },
            "entry": {
              "$ref": "#/definitions/actionsDef"
            },
            "exit": {
              "$ref": "#/definitions/actionsDef"
            },
            "invoke": {
              "$ref": "#/definitions/invokeDef"
            },
            "on": {
              "$ref": "#/definitions/transitionsDef"
            },
            "states": {
              "$ref": "#/definitions/statesObject"
            },
            "onDone": {
              "$ref": "#/definitions/transitionDef"
            }
          },
          "required": ["type", "states"]
        }
      ]
    },
    "atomicStateNode": {
      "allOf": [
        { "$ref": "#/definitions/baseStateNode" },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "atomic"
            },
            "entry": {
              "$ref": "#/definitions/actionsDef"
            },
            "exit": {
              "$ref": "#/definitions/actionsDef"
            },
            "invoke": {
              "$ref": "#/definitions/invokeDef"
            },
            "on": {
              "$ref": "#/definitions/transitionsDef"
            }
          }
        }
      ]
    },
    "historyStateNode": {
      "allOf": [
        { "$ref": "#/definitions/baseStateNode" },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "history"
            },
            "history": {
              "type": "string",
              "enum": ["shallow", "deep"]
            },
            "target": {
              "type": "string",
              "description": "The default target if no history exists for its parent node"
            }
          },
          "required": ["type"]
        }
      ]
    },
    "finalStateNode": {
      "allOf": [
        { "$ref": "#/definitions/baseStateNode" },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "final"
            }
          },
          "required": ["type"]
        }
      ]
    },
    "statesObject": {
      "type": "object",
      "patternProperties": {
        "^.*$": {
          "oneOf": [
            { "$ref": "#/definitions/atomicStateNode" },
            { "$ref": "#/definitions/compoundStateNode" },
            { "$ref": "#/definitions/parallelStateNode" },
            { "$ref": "#/definitions/historyStateNode" },
            { "$ref": "#/definitions/finalStateNode" }
          ]
        }
      }
    },
    "transitionsDef": {
      "type": "object",
      "patternProperties": {
        "^.*$": { "$ref": "#/definitions/transitionDef" }
      }
    },
    "transitionDef": {
      "oneOf": [
        {
          "$ref": "#/definitions/transitionObject"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transitionObject"
          }
        }
      ]
    },
    "transitionObject": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The text description of this transition."
        },
        "target": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "actions": {
          "$ref": "#/definitions/actionsDef"
        },
        "guard": {
          "$ref": "#/definitions/guardObject"
        },
        "meta": {
          "$ref": "#/definitions/metaObject"
        }
      },
      "required": []
    },
    "invokeObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "src": {
          "type": "string"
        },
        "input": {
          "type": "object",
          "additionalProperties": true
        },
        "meta": {
          "type": "object",
          "additionalProperties": true
        },
        "onDone": {
          "$ref": "#/definitions/transitionDef"
        },
        "onError": {
          "$ref": "#/definitions/transitionDef"
        },
        "onSnapshot": {
          "$ref": "#/definitions/transitionDef"
        }
      },
      "required": ["src"],
      "additionalProperties": false
    },
    "invokeDef": {
      "oneOf": [
        { "$ref": "#/definitions/invokeObject" },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/invokeObject"
          }
        }
      ]
    },
    "guardObject": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The guard type"
        },
        "params": {
          "type": "object",
          "description": "Guard parameters"
        }
      }
    },
    "metaObject": {
      "type": "object",
      "description": "Meta properties",
      "additionalProperties": true
    },
    "initialObject": {
      "oneOf": [
        {
          "type": "string",
          "description": "The inital state node key",
          "minLength": 1
        },
        {
          "$ref": "#/definitions/transitionObject"
        }
      ]
    }
  }
}
